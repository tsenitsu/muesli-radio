cmake_minimum_required(VERSION 3.30 FATAL_ERROR)

set(CMAKE_EXPERIMENTAL_CXX_IMPORT_STD "a9e1cf81-9932-4810-974b-6eccaf14e457")
set(CMAKE_CXX_MODULE_STD 1)

project(muesli-radio LANGUAGES CXX)

set(BUILD_SHARED_LIBS OFF)
set(CMAKE_CXX_STANDARD 23)
set(CMAKE_CXX_STANDARD_REQUIRED true)
if (NOT MSVC AND NOT GNU)
    set(CMAKE_CXX_EXTENSIONS ON)
endif()

option(ENABLE_ASAN "Enable Address sanitizer" OFF)
option(ENABLE_TSAN "Enable Thread sanitizer" OFF)

if (CMAKE_BUILD_TYPE STREQUAL "Debug" AND ENABLE_ASAN AND ENABLE_TSAN)
    message(FATAL_ERROR "Address sanitizer and Thread sanitizer can not be enabled at the same time")
endif()

if(MSVC)
   add_compile_options(/W4 /WX)
    if (CMAKE_BUILD_TYPE STREQUAL "Debug")
        if (ENABLE_ASAN)
            add_compile_options(/fsanitize=address)
            add_link_options(/INCREMENTAL:NO)
        endif()
        if (ENABLE_TSAN)
            message(FATAL_ERROR "Thread sanitizer is not supported by MSVC")
        endif()
    endif()
else()
    add_compile_options(-Werror -Wall -Wextra -pedantic -Wshadow)
    add_compile_options("$<$<COMPILE_LANGUAGE:CXX>:-Wpessimizing-move;-Wredundant-move>")

    if(GNU)
        add_compile_options("$<$<COMPILE_LANGUAGE:CXX>:-Wnrvo>")
    endif()

    if (CMAKE_BUILD_TYPE STREQUAL "Debug")
        if (ENABLE_ASAN)
            add_compile_options(-fsanitize=address,undefined,leak)
            add_link_options(-fsanitize=address,undefined,leak)
            if (GNU)
                add_compile_options(-D_GLIBCXX_SANITIZE_VECTOR)
            endif()
        endif()
        if (ENABLE_TSAN)
            add_compile_options(-fsanitize=thread)
            add_link_options(-fsanitize=thread)
        endif()
    endif()
endif()

add_subdirectory(lib)

add_executable(muesli-radio main.cpp)
target_link_libraries(muesli-radio PRIVATE audio-engine async-task-scheduler)

enable_testing()
add_subdirectory(testing)
